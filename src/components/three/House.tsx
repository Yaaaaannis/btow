/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useMemo } from 'react'
import { useGLTF, PerspectiveCamera } from '@react-three/drei'
import { MeshPhysicalMaterial, DoubleSide, BufferAttribute } from 'three'
import { Object3D, Mesh, BufferGeometry, Material } from 'three'
import type { GLTF } from 'three-stdlib'

interface GLTFResult extends GLTF {
  nodes: {
    [key: string]: Mesh<BufferGeometry, Material | Material[]>
  }
  materials: {
    [key: string]: Material
  }
}

type MaterialMap = {
  [key: string]: Material
  glass: MeshPhysicalMaterial
}

export function House(props: any) {
  const { nodes, materials } = useGLTF('/untitled-v1.glb') as unknown as GLTFResult
  
  // Optimiser les matériaux avec useMemo
  const optimizedMaterials = useMemo(() => {
    // Matériau de verre optimisé
    const glassMaterial = new MeshPhysicalMaterial({
      roughness: 0.1,
      transmission: 0.95,
      thickness: 0.5,
      clearcoat: 1,
      clearcoatRoughness: 0.1,
      ior: 1.5,
      side: DoubleSide,
      transparent: true,
      depthWrite: false,
    })

    // Optimiser les autres matériaux
    Object.values(materials).forEach(material => {
      material.side = DoubleSide
      material.needsUpdate = true
    })

    return {
      glass: glassMaterial,
      ...materials
    } as MaterialMap
  }, [materials])

  // Optimiser les géométries avec useMemo
  const optimizedGeometries = useMemo(() => {
    Object.values(nodes).forEach(node => {
      if (node.geometry) {
        // Optimiser uniquement les BufferAttribute
        const position = node.geometry.attributes.position
        const normal = node.geometry.attributes.normal
        const uv = node.geometry.attributes.uv
        
        if (position instanceof BufferAttribute) position.setUsage(35044)
        if (normal instanceof BufferAttribute) normal.setUsage(35044)
        if (uv instanceof BufferAttribute) uv.setUsage(35044)
        
        // Optimiser les buffers
        node.geometry.computeBoundingSphere()
        node.geometry.computeBoundingBox()
      }
    })
    return nodes
  }, [nodes])

  return (
    <group {...props} dispose={null}>
      <PerspectiveCamera
        makeDefault={false}
        far={1000}
        near={0.1}
        fov={22.895}
        position={[25.252, 1.82, 24.882]}
        rotation={[0.103, 0.73, -0.069]}
        scale={[1, 0.979, 1]}
      />
      <PerspectiveCamera
        makeDefault={false}
        far={1000}
        near={0.1}
        fov={22.895}
        position={[0.771, 2.523, 8.764]}
        rotation={[0.007, 0.042, 0]}
      />
      <PerspectiveCamera
        makeDefault={false}
        far={1000}
        near={0.1}
        fov={22.895}
        position={[14.111, 0.474, 9.408]}
        rotation={[0.55, 1.246, -0.527]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={optimizedGeometries.Plane_071.geometry}
        material={optimizedMaterials['Ground_Baked_001.002']}
        position={[-9.118, 0, -10.734]}
        scale={31.891}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={optimizedGeometries.Plane_043.geometry}
        material={optimizedMaterials.glass}
        position={[0.626, 0, -1.686]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={optimizedGeometries.Plane_058.geometry}
        material={optimizedMaterials['windows_frame_001_Baked_001.002']}
        position={[0.626, 0, -1.686]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={optimizedGeometries.Plane_059.geometry}
        material={optimizedMaterials['roof_001_Baked_001.002']}
        position={[0.626, 0, -1.686]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={optimizedGeometries.Plane_060.geometry}
        material={optimizedMaterials['main_frame_001_Baked_001.002']}
        position={[0.626, 0, -1.686]}
      />
      <group position={[0.626, 0, -1.686]}>
        <mesh
          castShadow
          receiveShadow
          geometry={optimizedGeometries.Plane_061_1.geometry}
          material={optimizedMaterials['inner_planks_001_Baked_001.002']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={optimizedGeometries.Plane_061_2.geometry}
          material={optimizedMaterials['inner_planks_001_Baked_001.002']}
        />
      </group>
      <mesh
        castShadow
        receiveShadow
        geometry={optimizedGeometries.Plane_062.geometry}
        material={optimizedMaterials['floor_001_Baked_001.002']}
        position={[0.626, 0, -1.686]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={optimizedGeometries.Plane_063.geometry}
        material={optimizedMaterials['door_003_Baked_001.002']}
        position={[-0.208, 2.589, -12.797]}
        rotation={[-Math.PI, 0, -Math.PI]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={optimizedGeometries.Plane_064.geometry}
        material={optimizedMaterials['door_004_Baked_001.002']}
        position={[0.086, 2.577, 1.944]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={optimizedGeometries.Plane_065.geometry}
        material={optimizedMaterials['base_supports_001_Baked_001.002']}
        position={[-4.594, 0, 0.814]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={optimizedGeometries.Plane_066.geometry}
        material={optimizedMaterials['base_supports_004_Baked_001.002']}
        position={[0.626, 0, -1.686]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={optimizedGeometries.Plane_067.geometry}
        material={optimizedMaterials['base_supports_005_Baked_001.002']}
        position={[0.626, 0, -1.686]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={optimizedGeometries.Plane_068.geometry}
        material={optimizedMaterials['base_railing_001_Baked_001.002']}
        position={[0.626, 0, -1.686]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={optimizedGeometries.Plane_069.geometry}
        material={optimizedMaterials['base_001_Baked_001.002']}
        position={[0.626, 0, -1.686]}
      />
    </group>
  )
}

// Précharger le modèle pour de meilleures performances
useGLTF.preload('/untitled-v1.glb')
